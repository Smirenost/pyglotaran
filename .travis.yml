# travis
sudo: false
language: python
cache: pip

matrix:
  fast_finish: true
  include:
    - python: 3.6
      name: flake8
      before_install:
        - echo "before_install"
        - python -m pip install -U pip>=9.0.1 flake8
      script:
        - flake8 glotaran
      after_success:
        # this prevents the tests to upload stuff to coveralls.io
        - echo "done"

    - python: 3.6
      # taken from https://quick-sphinx-tutorial.readthedocs.io/en/latest/advanced.html
      name: docs-creation
      before_install:
        - echo "before_install"
        - python -m pip install -r requirements_dev.txt
        - pip install -e .
      script:
        - make --directory=docs clean html
      after_success:
        # this prevents the tests to upload stuff to coveralls.io
        - echo "done"

    - python: 3.6
      # taken from https://quick-sphinx-tutorial.readthedocs.io/en/latest/advanced.html
      name: docs-linkcheck
      before_install:
        - echo "before_install"
        - python -m pip install -r requirements_dev.txt
        - pip install -e .
      script:
        - make --directory=docs clean linkcheck
      after_success:
        # this prevents the tests to upload stuff to coveralls.io
        - echo "done"

    # LINUX
    - python: "3.6"
      name: linux-py36

    - language: python
      sudo: required
      dist: xenial
      python: "3.7"
      name: linux-py37

    # OSX
    - language: generic
      python: 3.6
      os: osx
      name: osx-py36
      env:
        - DEPLOY_ALL=true
      before_install:
        - echo "before_install"
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda update conda -y
        - conda create -n py36 python=3.6 -y
        - source activate py36

    - language: generic
      python: 3.7
      name: osx-py37
      env:
        - DEPLOY_WHEELS=true
      os: osx
      before_install:
        - echo "before_install"
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda update conda -y
        - conda create -n py37 python=3.7 -y
        - source activate py37

    - stage: deploy
      python: 3.7
      name: PiPy-release
      if: type == push AND tag IS present
      script: echo "skip install"
      after_success: echo "skip after_success"
      deploy:
        provider: pypi
        distributions: sdist bdist_wheel
        user: s-weigand
        password:
          secure: B4qaAWW5vtHHvKSkMlGZuxg3EYqiPzEVdVdmYyRne9872jpU9pSAEW7HCGqeb6A8osEpML6IcPcQWJakmmEBlnaCQF6DXted/OwZFCnK6rUpPhDb/dmIZdkxDJY2gPFtpzlMC7+emH6HEYFRMG95xXhySRLDHMCrkK2yFutJLwPSZtOQKdRPl2u2S6t7lLhI6lVkmzUW08wA4vtJSRouab9Co1uxzLKm2I5tCZrx89w/52qT4ZAJY8xrzys7Jkuh8hcFrLG08HZ38IcBJGRVpiVbYQAf714BL5ObGHVxTe5IXD4XRVdafW7OUkmIagGWpGbVN/VUdx1slVKo3SVGja3thQzBkZJDZbZTEoZeiFFzzdLipnqSAZtDoqKyC8pWS1AtSq1P/g/L23Ni1EMzN55GVdGHlZfKk0MZuA8SbfLal/pVZoaW9Nmd9DL4KFP/ty5Ms0JQX2TItilpXdKG4tUdZbwz16bwD4bl6k1uskCopCL1oNkGnWyNRLEz/rgA+QYSD4lppIBjFDXuPSWv7lIZe9JSMjOtwL/TeZ+Jws2jcAhp3XeE0a3LTyab1oRdQ0K2qiis2EnNotNnnlAn0xIvwb9GWW/jdhlcxQ4Q2GtoKLajBl429H+SBddz5sln1eVayvetKcW3SliGr8NsEG789cwxJw7rKZGIidJv6VA=
        on:
          tags: true
          branch: master
          repo: glotaran/pyglotaran

  allow_failures:
    #      this test is allowed to fail since it uses external resources
    - name: docs-linkcheck

install:
  - pip install coveralls
  - python -m pip install -U -r requirements_dev.txt

script:
  - pwd
  - pip install -e .
  - py.test -vv --cov=glotaran --cov-config .coveragerc glotaran
  - pip freeze

after_success:
  - coveralls
  - coverage erase

notifications:
  slack:
    rooms:
      - secure: "pVrVDoJm9T5Zzz0GoxAY40RIVUccg8ObLmZJnHORnTEQddFg1AYgByd4nrBnpBmwOETg/bpDOvqXbwRuJWo3UJQjl0mxO3eH349ftjctxPTWp+601L6fCBgETArTayi3N//M2mmET2DEGCA9Oq4PFcoGGtUlLUcAGzrtuqM+sKxE/MMqk28EaV2vEjPifQJUKJ74huBXWvBjk1VhaSKdw71VrfF58VEsDACrIPgvbYdo6erkNj9F6CWD2vx/pm8uBcS4rGuTT98zfNnEx+Png85uZomsALhz8+jM8uCcpl6n6LJ+GI84OK7KNJdUAZTt7ylVxSpwPfsU/9KsFXFLPcMz7I8q/Z4HFFf+dBAv34DTnuLUKEmZ2cH8m56E0V0ky3PS9N59OOCXl8ys8GMqV65kbMeLfGzu8r0/06p2i4gTeO2YV9PzAGzeBmpFPlQtOAIV+VEa+1tJk5jxUTuHTMYCqp3aWObfbK7LVGilcfsBcrqjSV2S2yNCSUxSJ949/igUc6ZxMmSQ/wxOBWRSe3GEyxj3vZXvfjIV3y8Fjs3+CS47Vojx1/i6VjXAabJlDAbnNmm8oTSDJOT2fP1d9ukmxLOrmowc3fmX36fTpIBo1zpvODEiFYxa0UMioqj+8H7GC7Dw7KycRbWxP1Yxgx3VPR2wVbk0NA8wp37yfyo="
